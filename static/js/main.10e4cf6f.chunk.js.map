{"version":3,"sources":["store/slice.ts","store/store.ts","store/hook.tsx","components/PictureCard/PictureCard.tsx","components/PicturesCatalog/PicturesCatalog.tsx","components/SelectedPicture/SelectedPicture.tsx","App.tsx","index.tsx"],"names":["selectedPictureSlice","createSlice","name","initialState","selectedPicture","reducers","setSelectedPicture","state","action","payload","actions","store","configureStore","reducer","selectedPictureReducer","useAppDispatch","useDispatch","useAppSelector","useSelector","PictureCard","pictureData","user","urls","dispatch","useEffect","console","log","pictureSelectionHandler","className","onClick","onKeyUp","role","tabIndex","src","regular","alt","target","href","username","rel","PicturesCatalog","useState","pictures","setPictures","api","createApi","accessKey","search","getPhotos","query","page","perPage","then","res","response","results","length","catch","map","Fragment","id","SelectedPicture","picture","closeButtonHandler","onKeyDown","App","cn","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gUAcaA,EAAuBC,YAAY,CAC9CC,KAAM,kBACNC,aANyC,CACzCC,gBAAiB,MAMjBC,SAAU,CACRC,mBADQ,SACWC,EAAOC,GACxBD,EAAMH,gBAAkBI,EAAOC,YAKtBH,EAAuBN,EAAqBU,QAA5CJ,mBAEAN,IAAf,QCjBeW,EANDC,YAAe,CAC3BC,QAAS,CACPT,gBAAiBU,K,wCCDRC,EAAiB,kBAAMC,eACvBC,EAAkDC,I,eCQlDC,EAA+B,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACrCC,EAAeD,EAAfC,KAAMC,EAASF,EAATE,KACRC,EAAWR,IAEjBS,qBAAU,WACRC,QAAQC,IAAIJ,EAAM,WAGpB,IAAMK,EAA0B,WAC9BF,QAAQC,IAAIN,GACZG,EAASjB,EAAmBc,KAG9B,OACE,sBAAKQ,UAAU,cAAf,UACE,qBACEA,UAAU,uBACVC,QAAS,kBAAMF,KACfG,QAAS,kBAAMH,KACfI,KAAK,SACLC,SAAU,EALZ,SAOE,qBACEJ,UAAU,gCACVK,IAAKX,EAAKY,QACVC,IAAI,UAIR,mBACEP,UAAU,oBACVQ,OAAO,SACPC,KAAI,gCAA2BhB,EAAKiB,UACpCC,IAAI,aAJN,SAMGlB,EAAKnB,WCvCDsC,G,MAAkB,WAC7B,MAAgCC,mBAAc,IAA9C,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAMC,YAAU,CACpBC,UAAW,gDAgBb,OAbAtB,qBAAU,WACRoB,EAAIG,OAAOC,UAAU,CAAEC,MAAO,UAAWC,KAAM,EAAGC,QAAS,KACxDC,MAAK,SAAAC,GACAA,EAAIC,WACN7B,QAAQC,IAAI2B,EAAIC,SAASC,QAAQC,QACjCb,EAAYU,EAAIC,SAASC,aAG5BE,OAAM,WACLhC,QAAQC,IAAI,8BAEf,IAGD,qBAAKE,UAAU,kBAAf,SACGc,EAASgB,KAAI,SAACtC,GACb,OACE,cAAC,IAAMuC,SAAP,UACE,cAAC,EAAD,CAAavC,YAAaA,KADPA,EAAYwC,WCxB9BC,G,MAAkB,WAC7B,IAAMtC,EAAWR,IACX+C,EAAU7C,GAAe,SAACV,GAAD,OAAgBA,EAAMH,gBAAgBA,mBAE/D2D,EAAqB,WACzBxC,EAASjB,EAAmB,QAG9B,OACEwD,EAEI,sBAAKlC,UAAU,kBAAf,UACE,qBACEA,UAAU,+BACVC,QAAS,kBAAMkC,KACfC,UAAW,kBAAMD,KACjB/B,SAAU,EACVD,KAAK,WAIP,qBAAKH,UAAU,2BAA2BK,IAAK6B,EAAQxC,KAAKY,QAASC,IAAI,WAW3E,OC9BK8B,EAAgB,WAC3B,IAAMH,EAAU7C,GAAe,SAACV,GAAD,OAAgBA,EAAMH,gBAAgBA,mBAErE,OACE,sBAAKwB,UAAWsC,IAAG,MAAO,CAAE,sBAAuBJ,IAAnD,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCVNK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU1D,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJ2D,SAASC,eAAe,W","file":"static/js/main.10e4cf6f.chunk.js","sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable no-param-reassign */\n\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { IPicture } from '../types/IPicture';\n\ntype SelectedPictureState = {\n  selectedPicture : IPicture | null;\n};\n\nconst initialState: SelectedPictureState = {\n  selectedPicture: null,\n};\n\nexport const selectedPictureSlice = createSlice({\n  name: 'selectedPicture',\n  initialState,\n  reducers: {\n    setSelectedPicture(state, action: PayloadAction<null | IPicture>) {\n      state.selectedPicture = action.payload;\n    },\n  },\n});\n\nexport const { setSelectedPicture } = selectedPictureSlice.actions;\n\nexport default selectedPictureSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport selectedPictureReducer from './slice';\n\nconst store = configureStore({\n  reducer: {\n    selectedPicture: selectedPictureReducer,\n  },\n});\n\nexport default store;\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { useDispatch, useSelector, TypedUseSelectorHook } from 'react-redux';\n\nimport type { RootState, AppDispatch } from './store';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable no-console */\nimport React, { useEffect } from 'react';\nimport { useAppDispatch } from '../../store/hook';\nimport { setSelectedPicture } from '../../store/slice';\n\nimport { IPicture } from '../../types/IPicture';\n\nimport './PictureCard.scss';\n\ninterface props {\n  pictureData: IPicture;\n}\n\nexport const PictureCard: React.FC<props> = ({ pictureData }) => {\n  const { user, urls } = pictureData;\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    console.log(urls, 'urls');\n  });\n\n  const pictureSelectionHandler = () => {\n    console.log(pictureData);\n    dispatch(setSelectedPicture(pictureData));\n  };\n\n  return (\n    <div className=\"pictureCard\">\n      <div\n        className=\"pictureCard__wrapper\"\n        onClick={() => pictureSelectionHandler()}\n        onKeyUp={() => pictureSelectionHandler()}\n        role=\"button\"\n        tabIndex={0}\n      >\n        <img\n          className=\"pictureCard__wrapper__picture\"\n          src={urls.regular}\n          alt=\"img\"\n        />\n      </div>\n\n      <a\n        className=\"pictureCard__link\"\n        target=\"_blank\"\n        href={`https://unsplash.com/@${user.username}`}\n        rel=\"noreferrer\"\n      >\n        {user.name}\n      </a>\n    </div>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport { createApi } from 'unsplash-js';\nimport { IPicture } from '../../types/IPicture';\nimport { PictureCard } from '../PictureCard/PictureCard';\n\nimport './PicturesCatalog.scss';\n\nexport const PicturesCatalog = () => {\n  const [pictures, setPictures] = useState<any>([]);\n\n  const api = createApi({\n    accessKey: 'CXSxgho7UrQo1qLwGLXpY256CmINGXQgvO1zWuLL6Xo',\n  });\n\n  useEffect(() => {\n    api.search.getPhotos({ query: 'parrots', page: 1, perPage: 30 })\n      .then(res => {\n        if (res.response) {\n          console.log(res.response.results.length);\n          setPictures(res.response.results);\n        }\n      })\n      .catch(() => {\n        console.log('something went wrong!');\n      });\n  }, []);\n\n  return (\n    <div className=\"picturesCatalog\">\n      {pictures.map((pictureData: IPicture) => {\n        return (\n          <React.Fragment key={pictureData.id}>\n            <PictureCard pictureData={pictureData} />\n          </React.Fragment>\n        );\n      })}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\n/* eslint-disable no-console */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useEffect } from 'react';\nimport { setSelectedPicture } from '../../store/slice';\nimport { useAppDispatch, useAppSelector } from '../../store/hook';\n\nimport './SelectedPicture.scss';\n\nexport const SelectedPicture = () => {\n  const dispatch = useAppDispatch();\n  const picture = useAppSelector((state: any) => state.selectedPicture.selectedPicture);\n\n  const closeButtonHandler = () => {\n    dispatch(setSelectedPicture(null));\n  };\n\n  return (\n    picture\n      ? (\n        <div className=\"selectedPicture\">\n          <div\n            className=\"selectedPicture__closeButton\"\n            onClick={() => closeButtonHandler()}\n            onKeyDown={() => closeButtonHandler()}\n            tabIndex={0}\n            role=\"button\"\n          >\n          </div>\n          {/* <button className=\"selectedPicture__closeButton\" type=\"button\">X</button> */}\n          <img className=\"selectedPicture__picture\" src={picture.urls.regular} alt=\"img\" />\n          {/* <div\n            className=\"closeButton\"\n            onClick={() => closeButtonHandler()}\n            onKeyDown={() => closeButtonHandler()}\n            tabIndex={0}\n            role=\"button\"\n          >\n          </div> */}\n        </div>\n      )\n      : null\n  );\n};\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\n\nimport './App.scss';\nimport { createApi } from 'unsplash-js';\nimport { PicturesCatalog } from './components/PicturesCatalog/PicturesCatalog';\nimport { SelectedPicture } from './components/SelectedPicture/SelectedPicture';\nimport { useAppSelector } from './store/hook';\n\nexport const App: React.FC = () => {\n  const picture = useAppSelector((state: any) => state.selectedPicture.selectedPicture);\n\n  return (\n    <div className={cn('app', { 'app--displayPicture': picture })}>\n      <PicturesCatalog />\n      <SelectedPicture />\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}